name: Handle Metadata Dispatch

on:
  repository_dispatch:
    types: [new-release]

jobs:
  handle:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout metadata repo
        uses: actions/checkout@v4

      - name: Parse payload
        id: parse
        run: |
            echo '${{ toJson(github.event.client_payload) }}' > payload.json
            jq . payload.json
            sender=$(jq -r .sender payload.json)
            version=$(jq -r .version payload.json)
            config=$(jq -c .config payload.json)        
            capabilities=$(jq -c .capabilities payload.json)
            echo "REPO=$sender" >> $GITHUB_ENV
            echo "VERSION=$version" >> $GITHUB_ENV
            echo "CONFIG=$config" >> $GITHUB_ENV
            echo "CAPABILITIES=$capabilities" >> $GITHUB_ENV
            echo "SENDER=${{ github.event.client_payload.sender }}" >> $GITHUB_ENV

      - name: Split semver
        run: |
            IFS='.' read -r MAJOR MINOR PATCH <<< "${VERSION#v}"
            echo "MAJOR=$MAJOR" >> $GITHUB_ENV
            echo "MINOR=$MINOR" >> $GITHUB_ENV
            echo "PATCH=$PATCH" >> $GITHUB_ENV
      - name: Debug ENV values
        run: |
            echo "REPO=$REPO"
            echo "VERSION=$VERSION"
            echo "GITHUB_ACTOR=$GITHUB_ACTOR"
            echo "SENDER=$SENDER"
            echo "MAJOR=$MAJOR"
            echo "MINOR=$MINOR"
            echo "PATCH=$PATCH"

      - name: Write metadata file
        run: |
            rm payload.json
            mkdir -p "metadata/$REPO/$MAJOR/$MINOR"

            jq -n \
                --argjson config "$CONFIG" \
                --argjson capabilities "$CAPABILITIES" \
                '{config: $config, capabilities: $capabilities}' \
                > "metadata/$REPO/$MAJOR/$MINOR/$PATCH.json"



      - name: Compute safe branch name
        id: branch
        run: |
            safe_repo="${REPO//\//-}"
            echo "branch=metadata-${safe_repo}-${VERSION}" >> $GITHUB_OUTPUT

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
            token: ${{ secrets.METADATA_REPO_PAT }}
            commit-message: "Add metadata for ${{ env.REPO }}@${{ env.VERSION }}"
            title: "Add metadata for ${{ env.REPO }}@${{ env.VERSION }}"
            body: |
                This PR contains configuration metadata for:
                - Repo: ${{ env.REPO }}
                - Version: ${{ env.VERSION }}
            branch: ${{ steps.branch.outputs.branch }}